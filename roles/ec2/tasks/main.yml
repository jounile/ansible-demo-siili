---
# file: roles/ec2/tasks/main.yml

#    - name: Create AWS Security Group
#      ec2_group:
#        name: "{{ security_group }}"
#        description: Demo EC2 group
#        region: "{{ region }}"
#        rules:
#          - proto: tcp
#            from_port: 80
#            to_port: 80
#            cidr_ip: 0.0.0.0/0
#          - proto: tcp
#            from_port: 22
#            to_port: 22
#            cidr_ip: 10.0.0.0/8

#    - name: Create VPC
#      ec2_vpc:
#        state: present
#        cidr_block: 10.0.0.0/16
#        resource_tags: { "Environment":"Development" }
#        region: "{{ region }}"

# Requires Ansible 2.0
#    - name: Create subnet for demo
#      ec2_vpc_subnet:
#        state: present
#        vpc_id: vpc-e2563487
#        cidr: 172.30.1.0/24
#        resource_tags:
#          Name: Demo Subnet
#      register: demo_subnet

- name: Start AWS EC2 instance
  ec2:
    key_name: "{{ key_name }}"
    group: "{{ security_group }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    wait: true
    region: "{{ region }}"
    instance_tags:
      Name: "{{ instance_name }}"
    assign_public_ip: yes
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    count: 1
    monitoring: yes
  register: ec2

- name: Add hosts to group
  add_host: hostname={{ item.public_ip }} groupname=webserver
  with_items: ec2.instances

- name: Add Route53 DNS record for this instance
  route53:
     command: create
     zone: "{{ zone }}"
     record: "{{ instance_name }}.{{ zone }}"
     type: A
     ttl: 3600
     value: "{{ item.public_ip }}"
     overwrite: yes
  with_items: ec2.instances

- name: Wait until SSH is available
  wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
  with_items: ec2.instances
